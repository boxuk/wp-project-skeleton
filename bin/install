#!/usr/bin/env bash

# Exit when any command fails
set -e

# Usage: bin/install --project=[project_name] --styleguide=[styleguide_dir] --network=[docker_network_name] --php=[php_version]
#
# Defaults: project_name = boxuk-wp-skeleton, styleguide_dir = empty, docker_network_name = boxuk-docker, php_version = 8.2
# All arguments are optional.

# Set defaults
export PROJECT_NAME="boxuk-wp-skeleton"
export STYLEGUIDE_DIR=""
export DOCKER_NETWORK_NAME="boxuk-docker"
export PHP_VERSION="8.2"

GREEN='\033[0;32m'
BG_GREEN='\033[42m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# Thanks to: https://stackoverflow.com/a/14203146
for i in "$@"; do
  case $i in
    --project=*)
      export PROJECT_NAME="${i#*=}"
      shift # past argument=value
      ;;
    --styleguide=*)
      export STYLEGUIDE_DIR="${i#*=}"
      shift # past argument=value
      ;;
    --network=*)
      export DOCKER_NETWORK_NAME="${i#*=}"
      shift # past argument=value
      ;;
    --php=*)
      export PHP_VERSION="${i#*=}"
      shift # past argument=value
      ;;
    -*|--*)
      echo "Unknown option $i"
      exit 1
      ;;
    *)
      ;;
  esac
done

# Remove any existing styleguide nginx conf if it exists
rm -f docker/nginx/conf/styleguide.conf

echo 'Setting up .env vars...';

echo -e "Using ${GREEN}${PROJECT_NAME}${NC} for PROJECT_NAME";
echo -e "Using ${GREEN}${STYLEGUIDE_DIR}${NC} for STYLEGUIDE_DIR";
echo -e "Using ${GREEN}${DOCKER_NETWORK_NAME}${NC} for DOCKER_NETWORK_NAME";
echo -e "Using ${GREEN}${PHP_VERSION}${NC} for PHP_VERSION";

envsubst \$PROJECT_NAME,\$STYLEGUIDE_DIR,\$DOCKER_NETWORK_NAME,\$PHP_VERSION < .env.dist > .env
envsubst \$PROJECT_NAME,\$STYLEGUIDE_DIR < ./docker/app/.env.dist > ./docker/app/.env
cp ./docker/blackfire/.env.dist ./docker/blackfire/.env

if [ ! -f ./docker/database/.env ]; then
    cp ./docker/database/.env.dist ./docker/database/.env;
fi

if [ ! -f ./tests/.env ]; then
    cp ./tests/.env.dist ./tests/.env;
fi

if [[ "$(docker network ls | grep ${DOCKER_NETWORK_NAME})" == "" ]] ; then
    echo 'Setting up docker network...';
    docker network create --subnet=192.168.35.0/24 $DOCKER_NETWORK_NAME;
fi

echo 'Stopping any running containers...';

docker-compose stop;

# Import .env files so we have access to env vars. docker/app/.env will override the root.
. .env;
. ./docker/app/.env;

echo 'Building docker containers...';

if [ ! -z "${STYLEGUIDE_DIR}" ]; then
    docker-compose -f docker-compose.yml -f docker-compose-styleguide.yml build;
    docker-compose -f docker-compose.yml -f docker-compose-styleguide.yml up -d;
else
    docker-compose build;
    docker-compose up -d;
fi

echo 'Running composer install...';

bin/docker/composer install;

echo 'Setting up object-cache.php...';

cp wp-content/plugins/memcached/object-cache.php wp-content/object-cache.php

if [ ! -z "${STYLEGUIDE_DIR}" ]; then
    echo 'Installing styleguide...';
    bin/docker/styleguide/composer install;
    bin/docker/styleguide/yarn install;
    bin/docker/styleguide/sync-node-modules;
    bin/docker/styleguide/yarn encore dev;
fi

echo 'Installing WordPress...';

until bin/docker/wp core install --url="${WP_HOME}" --title="${PROJECT_NAME}" --admin_user=admin --admin_email=boxuk@example.com --skip-email;
do
    echo 'Waiting for the database...';
done

echo 'Emptying site...';

bin/docker/wp site empty;

echo 'Setting up state...';

bin/docker/wp package install boxuk/dictator:@stable;
bin/docker/wp dictator impose site-state.yml;

echo 'Setting up fixtures...'

bin/docker/wp package install hellonico/wp-cli-fixtures;
bin/docker/wp fixtures load;

echo 'Flushing cache...'
bin/docker/wp cache flush;

STYLEGUIDE_HOSTS_ENTRY=
if [ ! -z "${STYLEGUIDE_DIR}" ]; then
    STYLEGUIDE_HOSTS_ENTRY="${PROJECT_NAME}.styleguide.local"
fi

while true; do
    read -p "Do you wish to add a hosts entry (you will be prompted for password)? [Y/N]" yn

    case $yn in
        [Yy]* ) echo "127.0.0.1 ${PROJECT_NAME}.local ${STYLEGUIDE_HOSTS_ENTRY}" | sudo tee -a /etc/hosts; break;;
        [Nn]* ) break;;
        * ) echo "Please answer yes or no.";;
    esac
done

echo -e "\n${BOLD}${BG_GREEN}Installation complete! Next steps...${NC}\n";
echo -e "${GREEN}Set admin password:";
echo -e "${NC}bin/docker/wp user update admin --user_pass=password_here";
echo -e "\n${GREEN}Visit site:";
echo -e "${NC}${WP_HOME}";
echo -e "\n${GREEN}Visit admin:";
echo -e "${NC}${WP_HOME}/wp-admin";

if [ ! -z "${STYLEGUIDE_DIR}" ]; then
    echo -e "\n${GREEN}Visit styleguide:";
    echo -e "${NC}https://${STYLEGUIDE_HOSTS_ENTRY}";
fi
